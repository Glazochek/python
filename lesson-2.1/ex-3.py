
"""
Задание 3.
Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях
3) оцените итоговую сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""
inf_compan = {'Ozon': 112345323,
              'Alibaba': 34,
              'Yandex': 234123,
              'Google': 723613744245}

# 1)

def insertion_sort(arr):
    for i in range(len(arr)):
        cursor = arr[i]
        pos = i
        while pos > 0 and arr[pos - 1] > cursor:
            arr[pos] = arr[pos - 1]
            pos = pos - 1
        arr[pos] = cursor
    return arr
# сложность функции O(n^2)
n = 4
for f in insertion_sort(list(inf_compan.values()))[-3:]:  # O(b - a)
    for ic in inf_compan:                                 # O(N)
        if inf_compan[ic] == f:                           # O(1)
            n -= 1                                        # O(1)
            print(f'{n} - {ic}')                          # O(1)

# сложность O(n^2)
# первый алгаритм худше, так как квадратичная худше логорифмической
# 2)

# nn = 0
# compan_inf = {}                                            # O(len(..))
# for ci in inf_compan:                                      # O(N)
#     compan_inf[inf_compan[ci]] = ci                        # O(1)
# for k in sorted(compan_inf, reverse=True)[0:3]:            # O(N log N) O(b - a) O(N)
#     nn += 1                                                # O(1)
#     print(f'{nn} - {compan_inf[k]}')                       # O(1)

# очивидно, что это лучший вариант
# сложность O(N log N)


















